# Task ID: 5
# Title: [MVP] 목표 관리 인터페이스 개발
# Status: pending
# Dependencies: 3
# Priority: high
# Description: 목표 보기, 추적 및 관리를 위한 종합적인 UI 생성
# Details:
전체 목표 목록과 꿈별 목표 목록을 볼 수 있는 뷰를 설계하고 구현합니다. 목표 완료 추적을 위한 대화형 체크리스트를 만듭니다. 진행 시각화 컴포넌트(진행 막대, 차트)를 구축합니다. 목표 편집, 삭제 및 상태 업데이트 기능을 구현합니다. 목표에 대한 필터링 및 정렬 옵션을 추가합니다. 완료 상태 및 기록을 추적하도록 목표 모델을 업데이트합니다.

# Test Strategy:
목표 CRUD 작업을 테스트합니다. 진행 추적 정확도를 확인합니다. 많은 목표가 있는 UI 응답성을 테스트합니다. 목표 상태 업데이트가 데이터베이스 및 UI에 반영되는지 검증합니다.

# Subtasks:
## 1. 목표 목록 UI 구현 [pending]
### Dependencies: None
### Description: 전체 목표 목록과 꿈별 목표 목록을 볼 수 있는 UI 컴포넌트를 구현합니다.
### Details:
1. 목표 탭에서 모든 목표를 보여주는 목록 컴포넌트 구현
2. 꿈 상세 페이지에서 해당 꿈의 목표만 보여주는 목록 컴포넌트 구현
3. 목표 카드 컴포넌트 디자인 및 구현 (목표 내용, 상태, 진행률 표시)
4. 목표 필터링 기능 구현 (완료/미완료, 날짜별 등)
5. 목표 정렬 기능 구현 (생성일, 마감일, 우선순위 등)
6. 페이지네이션 또는 무한 스크롤 구현
7. 테스트: 다양한 필터 및 정렬 옵션으로 목표 목록이 올바르게 표시되는지 확인

## 2. 목표 체크리스트 및 진행률 UI 구현 [pending]
### Dependencies: 5.1
### Description: 목표 완료 추적을 위한 체크리스트와 진행률 시각화 컴포넌트를 개발합니다.
### Details:
1. 목표 체크리스트 컴포넌트 구현 (체크박스, 완료 상태 토글)
2. 진행률 표시 컴포넌트 구현 (프로그레스 바)
3. 목표 완료 시 시각적 피드백 제공 (애니메이션, 색상 변경 등)
4. 목표 상태 변경 시 실시간 UI 업데이트 구현
5. 테스트: 체크리스트 항목 완료/미완료 토글 시 진행률이 올바르게 업데이트되는지 확인

## 3. 목표 CRUD 기능 구현 [pending]
### Dependencies: 5.1
### Description: 목표 생성, 조회, 수정, 삭제 기능을 위한 UI 및 API 연동을 구현합니다.
### Details:
1. 목표 생성 폼/모달 구현
2. 목표 상세 보기 페이지/모달 구현
3. 목표 편집 폼/모달 구현
4. 목표 삭제 확인 대화상자 구현
5. 각 CRUD 작업에 대한 API 연동 구현
6. 유효성 검사 및 오류 처리 구현
7. 테스트: 모든 CRUD 작업이 UI와 데이터베이스에 올바르게 반영되는지 확인

## 4. 목표 상태 관리 기능 구현 [pending]
### Dependencies: 5.2, 5.3
### Description: 목표의 상태(진행 중, 완료 등)를 관리하고 업데이트하는 기능을 구현합니다.
### Details:
1. 목표 상태 모델 정의 (진행 중, 완료, 지연됨 등)
2. 상태 변경 UI 컴포넌트 구현 (드롭다운, 버튼 등)
3. 상태 변경 API 연동 구현
4. 상태에 따른 시각적 표시 구현 (색상, 아이콘 등)
5. 상태 변경 히스토리 추적 기능 구현 (선택적)
6. 테스트: 상태 변경이 UI와 데이터베이스에 올바르게 반영되는지 확인

## 5. 목표 데이터 모델 확장 및 API 업데이트 [pending]
### Dependencies: 5.3, 5.4
### Description: 목표 완료 상태 및 진행률 추적을 위해 데이터 모델을 확장하고 API를 업데이트합니다.
### Details:
1. Goal 테이블에 진행률(progress) 필드 추가
2. Goal 테이블에 완료 날짜(completedAt) 필드 추가
3. Goal 테이블에 상태(status) 필드 추가 또는 확장
4. 진행률 및 상태 업데이트를 위한 API 엔드포인트 구현
5. 목표 완료 시 completedAt 자동 설정 로직 구현
6. 테스트: 데이터 모델 변경 후 API가 올바르게 작동하는지 확인

